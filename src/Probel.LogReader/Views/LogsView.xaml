<UserControl
    x:Class="Probel.LogReader.Views.LogsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:conv="clr-namespace:Probel.LogReader.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Probel.LogReader.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xcad="https://github.com/Dirkster99/AvalonDock"
    x:Name="_self"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <conv:InvertBooleanConverter x:Key="InvertBooleanConverter" />
        <GridLength x:Key="DefaultHeight">400</GridLength>
        <sys:Double x:Key="AutoHideHeight">400</sys:Double>
        <GridLength x:Key="DefaultWidth">250</GridLength>
        <!--  ====  -->
        <conv:TextToVisibilityConverter x:Key="TextToVisibilityConverter" />
        <conv:StringToOneLinerConverter x:Key="StringToOneLinerConverter" />
        <conv:UppercaseConverter x:Key="UppercaseConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBarTray>
            <ToolBar>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsTraceVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="Eye" />
                </ToggleButton>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsDebugVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="Bug" />
                </ToggleButton>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsInfoVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="InformationCircle" />
                </ToggleButton>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsWarnVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="Warning" />
                </ToggleButton>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsErrorVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="Stop" />
                </ToggleButton>
                <ToggleButton Command="{Binding FilterCommand}" IsChecked="{Binding IsFatalVisible, UpdateSourceTrigger=PropertyChanged}">
                    <iconPacks:PackIconModern Kind="SignStop" />
                </ToggleButton>
            </ToolBar>
            <ToolBar>
                <ToggleButton x:Name="IsThreadIdVisible">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=IsThreadIdVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Content" Value="Hidesdsdf Thread id" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=IsThreadIdVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Content" Value="Showsddf Thread id" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Kind="TableColumn" />
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=IsThreadIdVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Hide Thread id" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=IsThreadIdVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Show Thread id" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton x:Name="IsLoggerVisible">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Kind="TableColumn" />
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=IsLoggerVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Hide logger" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=IsLoggerVisible, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Show logger" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ToggleButton>
                <Button Click="OnToggleButtonClick">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center">
                            <iconPacks:PackIconMaterial.Style>
                                <Style TargetType="iconPacks:PackIconMaterial">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_detailPane, Path=IsAutoHidden, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Kind" Value="Pin" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=_detailPane, Path=IsAutoHidden, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Kind" Value="PinOff" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </iconPacks:PackIconMaterial.Style>
                        </iconPacks:PackIconMaterial>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_detailPane, Path=IsAutoHidden, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Show details" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=_detailPane, Path=IsAutoHidden, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Hide details" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="ToggleSortLogs">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center">
                            <iconPacks:PackIconMaterial.Style>
                                <Style TargetType="iconPacks:PackIconMaterial">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Kind" Value="SortDescending" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Kind" Value="SortAscending" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </iconPacks:PackIconMaterial.Style>
                        </iconPacks:PackIconMaterial>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Sort descending" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Sort ascending" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>
            <ToolBar>
                <ToggleButton
                    x:Name="_isListeningFile"
                    IsChecked="{Binding IsListeningFile}"
                    Visibility="{Binding CanListen, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Kind="Radar" />
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_isListeningFile, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Stop listening" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=_isListeningFile, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Start listening" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </ToggleButton>
                <Button x:Name="RefreshLogs">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial
                            Margin="0,0,5,0"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Kind="Refresh" />
                        <TextBlock Text="Refresh" />
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <xcad:DockingManager
            Grid.Row="1"
            Margin="0,5,0,0"
            AllowMixedOrientation="True"
            Loaded="OnDockingManagerLoaded">
            <xcad:DockingManager.Theme>
                <xcad:GenericTheme />
            </xcad:DockingManager.Theme>
            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Horizontal">

                    <xcad:LayoutAnchorablePaneGroup AllowDuplicateContent="False" DockWidth="{StaticResource DefaultWidth}">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable
                                Title=" Days "
                                AutoHideWidth="200"
                                CanAutoHide="True"
                                CanClose="False"
                                CanDockAsTabbedDocument="False"
                                CanFloat="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="Margin" Value="3,3,0,3" />
                                                <Setter Property="Background" Value="Transparent" />
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button Click="OnExpandAll">
                                            <iconPacks:PackIconModern Kind="SectionExpandAll" />
                                        </Button>
                                        <Button Click="OnCollapseAll">
                                            <iconPacks:PackIconModern Kind="SectionCollapseAll" />
                                        </Button>
                                    </StackPanel>
                                    <TreeView
                                        x:Name="treeView"
                                        Grid.Row="1"
                                        ItemsSource="{Binding Days}"
                                        SelectedItemChanged="OnTreeViewSelectedItemChanged">
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                <StackPanel Orientation="Horizontal">
                                                    <iconPacks:PackIconModern x:Name="IconPack" Margin="0,2,5,2" />
                                                    <TextBlock
                                                        x:Name="Date"
                                                        Margin="0,2,5,2"
                                                        VerticalAlignment="Center" />
                                                </StackPanel>
                                                <HierarchicalDataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Level}" Value="1">
                                                        <Setter TargetName="Date" Property="Text" Value="{Binding Value, StringFormat=yyyy}" />
                                                        <Setter TargetName="IconPack" Property="Kind" Value="Calendar" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Level}" Value="2">
                                                        <Setter TargetName="Date" Property="Text" Value="{Binding Value, StringFormat=MMMM}" />
                                                        <Setter TargetName="IconPack" Property="Kind" Value="Calendar31" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Level}" Value="3">
                                                        <Setter TargetName="Date" Property="Text" Value="{Binding Value, StringFormat=dd MMMM yyyy}" />
                                                        <Setter TargetName="IconPack" Property="Kind" Value="Calendar14" />
                                                    </DataTrigger>
                                                </HierarchicalDataTemplate.Triggers>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </Grid>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>

                    <xcad:LayoutPanel Orientation="Vertical">
                        <xcad:LayoutDocumentPaneGroup>
                            <xcad:LayoutDocumentPane ShowHeader="False">
                                <xcad:LayoutDocument Title="Logs" CanClose="False">
                                    <DataGrid
                                        x:Name="_logs"
                                        Grid.Row="1"
                                        AutoGenerateColumns="False"
                                        CanUserAddRows="False"
                                        CanUserReorderColumns="False"
                                        CanUserResizeRows="False"
                                        CanUserSortColumns="False"
                                        FontFamily="Consolas"
                                        FontSize="11"
                                        GridLinesVisibility="Horizontal"
                                        HorizontalGridLinesBrush="#0C000000"
                                        IsReadOnly="True"
                                        ItemsSource="{Binding Logs}"
                                        MouseDoubleClick="OnLogsMouseDoubleClick"
                                        SelectionMode="Single"
                                        VerticalGridLinesBrush="#82000000">
                                        <DataGrid.Resources>
                                            <ResourceDictionary>
                                                <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{x:Null}" />
                                                            <Setter Property="Foreground" Value="{x:Static SystemColors.ControlTextBrush}" />
                                                            <Setter Property="FontWeight" Value="ExtraBold" />
                                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{x:Null}" />
                                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ResourceDictionary>
                                        </DataGrid.Resources>
                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="TRACE">
                                                        <Setter Property="Background" Value="{DynamicResource LogTraceColour}" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="DEBUG">
                                                        <Setter Property="Background" Value="{DynamicResource LogDebugColour}" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="INFO">
                                                        <Setter Property="Background" Value="{DynamicResource LogInfoColour}" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="WARN">
                                                        <Setter Property="Background" Value="{DynamicResource LogWarnColour}" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="ERROR">
                                                        <Setter Property="Background" Value="{DynamicResource LogErrorColour}" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}" Value="FATAL">
                                                        <Setter Property="Background" Value="{DynamicResource LogFatalColour}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="(+)">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <iconPacks:PackIconOcticons
                                                            HorizontalAlignment="Center"
                                                            Kind="Check"
                                                            Visibility="{Binding Exception, Converter={StaticResource TextToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn
                                                Width="Auto"
                                                Binding="{Binding Time, StringFormat=HH:mm:ss.fff}"
                                                Header="Time" />
                                            <DataGridTextColumn
                                                Width="Auto"
                                                Binding="{Binding Level, Converter={StaticResource UppercaseConverter}}"
                                                Header="Level" />
                                            <DataGridTextColumn
                                                Width="Auto"
                                                Binding="{Binding ThreadId}"
                                                Header="ThreadId"
                                                Visibility="{Binding IsChecked, Source={x:Reference IsThreadIdVisible}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <DataGridTextColumn
                                                Width="Auto"
                                                Binding="{Binding Logger}"
                                                Header="Logger"
                                                Visibility="{Binding IsChecked, Source={x:Reference IsLoggerVisible}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <DataGridTextColumn
                                                Width="*"
                                                Binding="{Binding Message, Converter={StaticResource StringToOneLinerConverter}}"
                                                Header="Message" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </xcad:LayoutDocument>
                            </xcad:LayoutDocumentPane>
                        </xcad:LayoutDocumentPaneGroup>
                        <xcad:LayoutAnchorablePaneGroup AllowDuplicateContent="False" DockHeight="{StaticResource DefaultHeight}">
                            <xcad:LayoutAnchorablePane>
                                <xcad:LayoutAnchorable
                                    x:Name="_detailPane"
                                    Title="Details"
                                    AutoHideHeight="{StaticResource AutoHideHeight}"
                                    CanClose="False"
                                    CanDockAsTabbedDocument="False"
                                    CanHide="False">
                                    <Grid Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="150" />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="5" />
                                            <RowDefinition Height="2*" />
                                        </Grid.RowDefinitions>
                                        <!--  FIRST COLUMN  -->
                                        <StackPanel Grid.RowSpan="3" Margin="5">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="TRACE">
                                                            <Setter Property="Background" Value="{DynamicResource LogTraceColour}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="DEBUG">
                                                            <Setter Property="Background" Value="{DynamicResource LogDebugColour}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="INFO">
                                                            <Setter Property="Background" Value="{DynamicResource LogInfoColour}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="WARN">
                                                            <Setter Property="Background" Value="{DynamicResource LogWarnColour}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="ERROR">
                                                            <Setter Property="Background" Value="{DynamicResource LogErrorColour}" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Source={x:Reference _logs}, Path=SelectedItem.Level, Converter={StaticResource UppercaseConverter}}" Value="FATAL">
                                                            <Setter Property="Background" Value="{DynamicResource LogFatalColour}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <StackPanel.Resources>
                                                <Style x:Key="LabelStyle" TargetType="TextBlock">
                                                    <Setter Property="Margin" Value="5" />
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                </Style>
                                                <Style x:Key="ValueStyle" TargetType="TextBlock">
                                                    <Setter Property="Margin" Value="15,0,5,0" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBlock Style="{StaticResource LabelStyle}" Text="Time" />
                                            <TextBlock Style="{StaticResource ValueStyle}" Text="{Binding ElementName=_logs, Path=SelectedItem.Time, StringFormat=HH:mm:ss.fff}" />
                                            <TextBlock Style="{StaticResource LabelStyle}" Text="Level" />
                                            <TextBlock Style="{StaticResource ValueStyle}" Text="{Binding ElementName=_logs, Path=SelectedItem.Level}" />
                                            <TextBlock Style="{StaticResource LabelStyle}" Text="Thread Id" />
                                            <TextBlock Style="{StaticResource ValueStyle}" Text="{Binding ElementName=_logs, Path=SelectedItem.ThreadId}" />
                                            <TextBlock Style="{StaticResource LabelStyle}" Text="Logger" />
                                            <TextBlock Style="{StaticResource ValueStyle}" Text="{Binding ElementName=_logs, Path=SelectedItem.Logger}" />
                                        </StackPanel>

                                        <!--  SECOND COLUMN  -->
                                        <GridSplitter
                                            Grid.RowSpan="2"
                                            Grid.Column="1"
                                            Width="5"
                                            VerticalAlignment="Stretch"
                                            ResizeBehavior="PreviousAndNext"
                                            ResizeDirection="Columns" />

                                        <!--  THIRD COLUMN  -->
                                        <GroupBox Grid.Column="2" Header="Message">
                                            <TextBox
                                                FontFamily="Consolas"
                                                HorizontalScrollBarVisibility="Auto"
                                                IsReadOnly="True"
                                                Text="{Binding ElementName=_logs, Path=SelectedItem.Message}"
                                                VerticalScrollBarVisibility="Auto" />
                                        </GroupBox>
                                        <GridSplitter
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Height="5"
                                            HorizontalAlignment="Stretch" />
                                        <GroupBox
                                            Grid.Row="2"
                                            Grid.Column="2"
                                            Header="Call stack">
                                            <TextBox
                                                FontFamily="Consolas"
                                                HorizontalScrollBarVisibility="Auto"
                                                IsReadOnly="True"
                                                Text="{Binding ElementName=_logs, Path=SelectedItem.Exception}"
                                                VerticalScrollBarVisibility="Auto" />
                                        </GroupBox>
                                    </Grid>
                                </xcad:LayoutAnchorable>
                                <xcad:LayoutAnchorable
                                    Title="Message"
                                    AutoHideHeight="{StaticResource AutoHideHeight}"
                                    CanClose="False"
                                    CanDockAsTabbedDocument="False"
                                    CanHide="False">
                                    <TextBox
                                        FontFamily="Consolas"
                                        HorizontalScrollBarVisibility="Auto"
                                        IsReadOnly="True"
                                        Text="{Binding ElementName=_logs, Path=SelectedItem.Message}"
                                        VerticalScrollBarVisibility="Auto" />
                                </xcad:LayoutAnchorable>
                                <xcad:LayoutAnchorable
                                    Title="Call Stack"
                                    AutoHideHeight="{StaticResource AutoHideHeight}"
                                    CanClose="False"
                                    CanDockAsTabbedDocument="False"
                                    CanHide="False">
                                    <TextBox
                                        FontFamily="Consolas"
                                        HorizontalScrollBarVisibility="Auto"
                                        IsReadOnly="True"
                                        Text="{Binding ElementName=_logs, Path=SelectedItem.Exception}"
                                        VerticalScrollBarVisibility="Auto" />
                                </xcad:LayoutAnchorable>
                            </xcad:LayoutAnchorablePane>
                        </xcad:LayoutAnchorablePaneGroup>
                    </xcad:LayoutPanel>
                </xcad:LayoutPanel>

            </xcad:LayoutRoot>
        </xcad:DockingManager>
        <StatusBar Grid.Row="4">
            <StatusBarItem>
                <TextBlock>
                    <Run Text="{Binding LogsCount, Mode=OneWay}" />
                    <Run Text="Item(s)" />
                </TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock>
                    <Run Text="Repository:" />
                    <Run Text="{Binding RepositoryName, Mode=OneWay}" />
                </TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock>
                    <Run Text="Date:" />
                    <Run FontWeight="Bold" Text="{Binding Date, Mode=OneWay, StringFormat={}dd MMMM yyyy}" />
                </TextBlock>
            </StatusBarItem>
            <Separator Visibility="{Binding IsFile, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
            <StatusBarItem>
                <TextBlock Visibility="{Binding IsFile, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Run Text="Source:" />
                    <Hyperlink NavigateUri="{Binding FilePath, Mode=OneWay}" RequestNavigate="OnRequestNavigate">
                        <TextBlock Text="{Binding FilePath, Mode=OneWay}" />
                    </Hyperlink>
                </TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem Visibility="{Binding IsListeningFile, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock>
                    <Run Text="{Binding ChangeCount}" />
                    <Run Text="Change(s)" />
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center">
                        <iconPacks:PackIconMaterial.Style>
                            <Style TargetType="iconPacks:PackIconMaterial">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Kind" Value="SortAscending" />
                                        <Setter Property="ToolTip" Value="Sorted ascending" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Kind" Value="SortDescending" />
                                        <Setter Property="ToolTip" Value="Sorted descending" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconMaterial.Style>
                    </iconPacks:PackIconMaterial>
                    <TextBlock Margin="5,0,5,0">
                        <TextBlock.Resources>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Text" Value="Ascending" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsOrderByAsc, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Text" Value="Descending" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Resources>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>
